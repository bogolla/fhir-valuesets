---
- name: Ensure the postgresql service is running
  service: name=postgresql state=started enabled=yes
  become_user: root
  tags: ["fhir_valuesets_server", "postgresql_server"]

- name: Add custom database user for management
  become_user: postgres
  shell: >-
    if psql -tAc "SELECT 1 FROM pg_roles WHERE rolname='{{pg_login_user}}'" | grep -q 1 ; then
    echo "role '{{pg_login_user}}' exists";
    else createuser --superuser {{pg_login_user}};
    fi
  tags: ["postgresql_user", "postgresql_create_user", "fhir_valuesets_server"]

- name: alter custom user password
  become_user: postgres
  shell: >
    psql -c "ALTER ROLE postgres WITH PASSWORD '{{pg_login_password}}';"
  tags: ["postgresql_user", "postgresql_change_user_password", "fhir_valuesets_server"]

- name: Add db for custom user for management
  become_user: postgres
  shell: >
    if psql -lqt | cut -d \| -f 1 | grep -wq {{pg_login_user}}; then
    echo "database {{pg_login_user}} exists";
    else psql -c "CREATE DATABASE {{pg_login_user}};";
    fi
  tags: ["postgresql_user", "postgresql_database", "fhir_valuesets_server"]

- name: make valuesets installation directory
  file: name={{ valuesets_install_dir }} owner={{deploy_user}} group={{deploy_group}} state=directory
  become_user: root
  tags: fhir_valuesets_server

- name: Manually create the valuesets virtualenv
  command: virtualenv {{valuesets_venv_dir}} -p python3 creates="{{valuesets_venv_dir}}"
  tags: fhir_valuesets_server

- name: Update pip in valuesets virtualenv
  pip: >-
    name=pip virtualenv={{valuesets_venv_dir}} state=latest
  become_user: root
  tags: fhir_valuesets_server

- name: Install sil_data_fixtures
  pip: name=sil_data_fixtures version=1.0.0 virtualenv={{valuesets_venv_dir}}
  become_user: "{{deploy_user}}"
  tags: fhir_valuesets_server

- name: Install fhir-valuesets-server
  pip: >-
    name=sil-valuesets-server version={{valuesets_version}} virtualenv={{valuesets_venv_dir}}
  become_user: "{{deploy_user}}"
  tags: fhir_valuesets_server, webserver_settings, static, rebuild

- name: setup valuesets database user
  postgresql_user: >
    name={{valuesets_db_user}}
    password={{valuesets_db_pass}}
    state=present
    role_attr_flags=LOGIN,SUPERUSER,CREATEDB,CREATEROLE,REPLICATION
    login_host={{db_host}}
    login_user=postgres
    login_password={{pg_login_password}}
    port={{db_port}}
  become_user: root
  tags: fhir_valuesets_server


- name: restart postgresql
  service: name=postgresql state=restarted
  become_user: root
  tags: valuesets_buildserver, rebuild

- name: drop valuesets database
  postgresql_db: >
    name={{valuesets_db_name}}
    owner={{valuesets_db_user}}
    login_host={{db_host}}
    login_user=postgres
    login_password={{pg_login_password}}
    port={{db_port}}
    state=absent
  become_user: root
  tags: fhir_valuesets_server, final_fetch, rebuild


- name: setup valuesets database
  postgresql_db: >
    name={{valuesets_db_name}}
    owner={{valuesets_db_user}}
    login_host={{db_host}}
    login_user=postgres
    login_password={{pg_login_password}}
    port={{db_port}}
    state=present
  become_user: root
  tags: fhir_valuesets_server, final_fetch, rebuild

- name: grant privileges to user on valuesets database
  postgresql_privs: >
    db={{valuesets_db_name}}
    state=present
    type=database
    role={{valuesets_db_user}}
    privs=ALL
    login_host={{db_host}}
    login_user=postgres
    login_password={{pg_login_password}}
    port={{db_port}}
  become_user: root
  tags: fhir_valuesets_server, final_fetch, rebuild

- name: add env file and runfile
  template: src={{ item.src }} dest={{valuesets_install_dir}}/{{ item.dest }}
  tags: fhir_valuesets_server, webserver_settings,static,final_fetch
  with_items:
      - { src: "fhir_valuesets_server.env.sh", dest: "valuesets_env.sh" }
      - { src: "fhir_valuesets_server.run.sh", dest: "valuesets_run.sh" }
      - { src: "fhir_valuesets_server.initialize.sh", dest: "initialize.sh" }
      - { src: "fhir_valuesets_server.static_files.sh", dest: "static_files.sh" }

- name: make valuesets_run.sh executable
  file: >-
    path={{valuesets_install_dir}}/valuesets_run.sh mode="a+rwx"
  tags: fhir_valuesets_server
  become_user: root

- name: make initialize.sh executable
  file: >-
    path={{valuesets_install_dir}}/initialize.sh mode="a+rwx"
  tags: fhir_valuesets_server
  become_user: root

- name: migrate database
  command: >-
    bash {{valuesets_install_dir}}/initialize.sh
  tags: fhir_valuesets_server, rebuild
  become_user: "{{deploy_user}}"

- name: load bootstrap data
  shell: ". {{valuesets_install_dir}}/valuesets_env.sh && {{django_manage}} bootstrap '{{valuesets_venv_dir}}/lib/python3.5/site-packages/fhir_valuesets/data/*/*.json'"
  become_user: "{{deploy_user}}"
  become: yes
  tags: fhir_valuesets_server

- name: make static directory
  file: name={{ static_dir }} owner={{deploy_user}} group={{deploy_group}} state=directory
  tags: fhir_valuesets_server

- name: collect static files
  command: >-
    bash {{valuesets_install_dir}}/static_files.sh
  tags: fhir_valuesets_server, static
  become_user: root

- name: set fhir_valuesets_server to nginx sites-available
  template: >
    src=fhir_valuesets_server.nginx.conf
    dest="/etc/nginx/sites-available/fhir_valuesets_server"
    owner="www-data"
  tags: fhir_valuesets_server, webserver_settings
  become_user: root

- name: set nginx sites-available to sites-enabled
  file: >
    src="/etc/nginx/sites-available/fhir_valuesets_server"
    dest="/etc/nginx/sites-enabled/fhir_valuesets_server"
    state=link
  tags: fhir_valuesets_server, webserver_settings
  become_user: root

- name: stop nginx
  service: >-
    name=nginx state=stopped
  become_user: root
  tags: fhir_valuesets_server, webserver_settings, rebuild

- name: start nginx
  service: >-
    name=nginx state=started
  become_user: root
  tags: fhir_valuesets_server, webserver_settings, rebuild

- name: add supervisor config to supervisord conf.d
  template: >-
    src=fhir_valuesets_server.supervisor.conf dest={{supervisor_conf_dir}}/fhir_valuesets_server.conf
  tags: fhir_valuesets_server, webserver_settings
  become_user: root

- name: stop supervisor
  service: >-
    name=supervisor state=stopped
  become_user: root
  tags: fhir_valuesets_server, webserver_settings, rebuild

- name: make log directory
  file: name={{ log_dir }} group={{deploy_group}} owner={{deploy_user}} state=directory mode=u=rwx,g=rwx,o=r
  become_user: root
  tags: fhir_valuesets_server, webserver_settings

- name: start supervisor
  service: >-
    name=supervisor state=started
  become_user: root
  tags: fhir_valuesets_server, webserver_settings, rebuild

- name: allow port 80
  ufw: port=80 proto=tcp rule=allow
  tags: fhir_valuesets_server, webserver_settings
  become_user: root
